@if $form-v1-0 {
	.upload {
		overflow: hidden;

		height: $base-input-height;

		margin: 0 0 $small-spacing;

		border-radius: $base-border-radius;

		line-height: $base-input-height - ($base-border-width * 2);

		@include element('files') {
			display: table-cell;

			padding: 0 $base-spacing;

			border: $base-border;
			border-color: color('border', 'general', 1, 10);
			border-right: none;

			width: 100%;
		}

		@include element('link') {
			@include transition(all $base-duration $base-timing);

			position: relative;

			display: table-cell;
			
			padding: 0 $base-spacing;

			background-color: color('button', 'general');

			color: color('text-inverted', 'general');
			white-space: nowrap;

			&:hover {
				background-color: color('button', 'general', 1, 10);

				box-shadow: inset 0 ($base-border-width * -1) ($base-border-width) color('shadow', 'general', .35);

				color: pick-visible-color(
					color('button', 'general', 1, 10),
					color('text', 'general'),
					color('text-inverted', 'general')
				);
			}

			@include modifier('icon') {
				padding: 0 $base-spacing 0 ($base-spacing + $small-icon-width + $small-spacing);

				svg {
					@include position(absolute, 50% null null $base-spacing);
					@include transform(translateY(-50%));

					fill: color('icon-inverted', 'general');
				}
			}
		}

		@include modifier('sm') {
			height: $small-input-height;

			line-height: $small-input-height - ($base-border-width * 2);
		}

		@include modifier('large') {
			height: $large-input-height;

			line-height: $large-input-height - ($base-border-width * 2);
		}

		@include modifier('inline') {
			display: inline-block;
		}

		input[type="file"] {
			display: none;
		}

		label {
			display: table;

			width: 100%;

			cursor: pointer;
		}
	}
} // End if