@if $form-v1-0 {
	$switch-padding: $base-border-width;
	$switch-shadow: 0 0 0 $base-border-width color('border', 'general');

	.switch {
		@extend %row-flexbox;
		@extend .row--vertical-center;

		background-color: color('input', 'background');

		cursor: pointer;

		&:hover {
			.switch__indicator::after {
				background-color: color('secondary', 'background');
			}

			.switch__link {
				color: color('text', 'general');
			}
		}	

		.switch__indicator ~ .switch__link,
		.switch__link ~ .switch__indicator {
			margin: 0 0 0 $small-spacing;
		}

		input[type="checkbox"],
		input[type="radio"] {
			display: none;

			&:checked ~ .switch__indicator {
				background-color: color('green', 'state');

				&::before {
					@include transform(scale(0));
				}

				&::after {
					background-color: color('input', 'background');

					box-shadow: 0 0 0 $base-border-width color('border', 'general', 0);
				}
			}

			&:checked ~Â .switch__link {
				color: color('text', 'general');
			}
		}

		@include element('indicator') {
			
			position: relative;

			display: block;

			background: color('border', 'general');			

			&::before {
				@include position(absolute, $switch-padding null null $switch-padding);
				@include transform(scale(1));
				@include transition(all $base-duration $base-timing);

				// background-color: color('input', 'background');

				z-index: 1;

				content: '';
			}

			&::after {
				@include position(absolute, 0 null null 0);
				@include transition(all $base-duration $base-timing);

				margin: $switch-padding;

				background-color: color('body', 'background');

				box-shadow: $switch-shadow;

				z-index: 2;

				content: '';
			}
		}

		@include element('link') {
			@include transition(color $base-duration $base-timing);

			color: color('text', 'general', .6);
		}

		// Sizes
		@each $size in $sizes {
			@include modifier($size) {
				$spacing: map-get($input-ui-sizes, $size) / 2;
				$switch-width: map-get($input-ui-sizes, $size) + $spacing;
				$switch-height: map-get($input-ui-sizes, $size);
				$switch-spacing: ((map-get($input-sizes, $size) - map-get($input-ui-sizes, $size)) / 2);
				$switch-font-size: map-get($font-sizes, $size);

				.switch__indicator {
					width: $switch-width;
					height: $switch-height;

					border-radius: $switch-height;

					line-height: $switch-height;

					&::before {
						width: $switch-width - ($switch-padding * 2);
						height: $switch-height - ($switch-padding * 2);
 
						border-radius: $switch-height - ($switch-padding * 2);
					}

					&::after {
						width: $switch-height - ($switch-padding * 2);
						height: $switch-height - ($switch-padding * 2);

						border-radius: $switch-height - ($switch-padding * 2);
					}
				}

				.switch__link {
					font-size: $switch-font-size;
				}

				input[type="checkbox"],
				input[type="radio"] {
					&:checked ~ .switch__indicator::after {
						left: ($switch-width - $switch-height);
					}
				}
			}
		}
	}
}