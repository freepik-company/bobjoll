@if $form-v1-0 {	
	%spacing {
		margin-left: $small-spacing;
	}

	.checkbox,
	.radio {
		@extend %row-flexbox;
		@extend .row--vertical-center;

		cursor: pointer;

		input[type="checkbox"],
		input[type="radio"] {
			display: none;

			&:checked ~ .checkbox__indicator,
			&:checked ~ .radio__indicator {
				@include transition(
					box-shadow $base-duration $base-timing
					background-color $base-duration $base-timing
				);

				background-color: color('input', 'background');

				box-shadow: inset 0 0 0 ($base-input-ui-height) color('green', 'state');				

				.icon {
					@include transform(scale(1));
					@include transition(
						opaicty $base-duration $base-duration $base-timing,
						transform $base-duration $base-duration $base-timing
					);

					opacity: 1;
				}
			}

			&:checked ~Â .checkbox__link,
			&:checked ~ .checkbox__link {
				opacity: 1;
			}
		}

		@include element('indicator') {
			display: block;

			width: $base-input-ui-height;
			height: $base-input-ui-height;

			border-radius: $base-border-radius;

			background-color: color('input', 'background');

			box-shadow: inset 0 0 0 $base-border-width color('border', 'general');

			.icon {
				@include transform(scale(0));
				@include transition(
					opaicty $base-duration $base-timing,
					transform $base-duration $base-timing
				);

				opacity: 0;

				width: $base-input-ui-height * .8;
				height: $base-input-ui-height * .8;

				margin: ($base-input-ui-height - ($base-input-ui-height * .8)) / 2;
				
				color: color('icon-inverted', 'general');
				fill: color('icon-inverted', 'general');
				font-size: $base-input-ui-height * .8;
				line-height: $base-input-ui-height * .8;
			}
		}

		@include element('link') {
			@include transition(opacity $base-duration $base-timing);
			@include user-select(none);

			display: inline;

			opacity: .6;
		}

		@include modifier('inverted') {
			color: color('text-inverted', 'general', 1);

			&:hover .checkbox__indicator,
			&:hover .radio__indicator {
				background-color: lighten(color('border', 'general'), 5);				
			}

			input[type="checkbox"]:checked + .checkbox__indicator,
			input[type="radio"]:checked + .radio__indicator {
				background-color: color('input', 'background');

				box-shadow: inset 0 0 0 ($base-input-ui-height) color('green', 'state');
			}
		}

		// Sizes
		@each $size in $sizes {		
			@include modifier($size) {
				.checkbox__indicator,
				.radio__indicator {
					width: map-get($input-ui-sizes, $size);
					height: map-get($input-ui-sizes, $size);

					.icon {
						width: map-get($input-ui-sizes, $size) * .8;
						height: map-get($input-ui-sizes, $size) * .8;

						font-size: map-get($input-ui-sizes, $size) * .8;
						line-height: map-get($input-ui-sizes, $size) * .8;
					}
				}
			}
		} // End sizes
	}

	.checkbox {
		.checkbox__indicator ~ .checkbox__link,
		.checkbox__link ~ .checkbox__indicator {
			@extend %spacing;
		}
	}

	.radio {
		.radio__indicator ~ .radio__link,
		.radio__link ~ .radio__indicator {
			@extend %spacing;
		}

		.radio__indicator {
			border-radius: 50%;
		}
	}
}