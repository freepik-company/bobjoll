@if $form-v1-0 {
	%checked-indicator {
		@include transition(
			box-shadow $base-duration $base-timing
			background-color $base-duration $base-timing
		);

		background-color: color('input', 'background');

		box-shadow: inset 0 0 0 ($base-input-ui-height) color('green', 'state');				

		.icon {
			@include transform(scale(1));
			@include transition(
				opaicty $base-duration $base-duration $base-timing,
				transform $base-duration $base-duration $base-timing
			);

			opacity: 1;
		}
	}

	%checked-link {
		opacity: 1;
	}
	
	%spacing {
		margin-left: $small-spacing;
	}

	.checkbox,
	.radio {
		@extend %row-flexbox;
		@extend .row--vertical-center;

		cursor: pointer;

		padding: (($base-element-height - $base-input-ui-height) / 2) 0;

		&.active .checkbox__indicator,
		&.active .radio__indicator {
			@extend %checked-indicator;
		}

		&.active .checkbox__link,
		&.active .radio__link {
			@extend %checked-link;
		}

		input[type="checkbox"],
		input[type="radio"] {
			display: none;

			&:checked ~ .checkbox__indicator,
			&:checked ~ .radio__indicator {
				@extend %checked-indicator;
			}

			&:checked ~Â .checkbox__link,
			&:checked ~ .checkbox__link {
				@extend %checked-link;
			}
		}

		@include element('indicator') {
			display: block;

			width: $base-input-ui-height;
			height: $base-input-ui-height;

			border-radius: $base-border-radius;

			background-color: color('input', 'background');

			box-shadow: inset 0 0 0 $base-border-width color('border', 'general');

			.icon {
				@include transform(scale(0));
				@include transition(
					opaicty $base-duration $base-timing,
					transform $base-duration $base-timing
				);

				opacity: 0;

				width: $base-input-ui-height;
				height: $base-input-ui-height;

				padding: (($base-input-ui-height - ($base-input-ui-height * .8)) / 2);
				
				color: color('icon-inverted', 'general');
				fill: color('icon-inverted', 'general');
				font-size: $base-input-ui-height * .8;
				line-height: $base-input-ui-height * .8;
			}
		}

		@include element('link') {
			@include transition(opacity $base-duration $base-timing);
			@include user-select(none);

			display: inline;

			flex: 1;

			height: $base-input-ui-height;

			line-height: $base-input-ui-height;

			opacity: .6;
		}

		@include modifier('inverted') {
			color: color('text-inverted', 'general', 1);

			&:hover .checkbox__indicator,
			&:hover .radio__indicator {
				background-color: lighten(color('border', 'general'), 5);				
			}

			input[type="checkbox"]:checked + .checkbox__indicator,
			input[type="radio"]:checked + .radio__indicator {
				background-color: color('input', 'background');

				box-shadow: inset 0 0 0 ($base-input-ui-height) color('green', 'state');
			}
		}

		// Sizes
		@each $size in $sizes {		
			$checkbox-width: map-get($input-ui-sizes, $size);
			$checkbox-height: $checkbox-width;
			$icon-size: $checkbox-width * .8;

			@include modifier($size) {
				padding: (($base-element-height - $checkbox-height) / 2) 0;

				.checkbox__indicator,
				.radio__indicator {
					width: $checkbox-width;
					height: $checkbox-height;				

					.icon {
						width: $checkbox-width;
						height: $checkbox-height;

						padding: ($checkbox-width - $icon-size) / 2;

						font-size: $icon-size;
						line-height: $icon-size;
					}
				}

				.checkbox__link,
				.radio__link {
					height: $checkbox-height;

					line-height: $checkbox-height;
				}
			}
		} // End sizes
	}

	.checkbox {
		.checkbox__indicator ~ .checkbox__link,
		.checkbox__link ~ .checkbox__indicator {
			@extend %spacing;
		}
	}

	.radio {
		.radio__indicator ~ .radio__link,
		.radio__link ~ .radio__indicator {
			@extend %spacing;
		}

		.radio__indicator {
			border-radius: 50%;
		}
	}
}