@if $form-v1-0 {
	#{$all-text-inputs} {
		@include appearance(none);
		@include user-select(text);
		@include transition(
			border $base-duration $base-timing,
			box-shadow $base-duration $base-timing
		);
		
		display: block;

		width: 100%;
		height: $base-input-height;

		margin: 0 0 $small-spacing;
		padding: 0 $small-spacing;

		border: $base-border;
		border-radius: $base-border-radius;

		background-color: color('input', 'background');

		box-shadow: 0 0 0 transparent;

		color: color('text', 'general');
		font-size: $base-font-size;
		line-height: $base-input-height;

		&:-webkit-autofill {
			box-shadow: inset 0 0 0 $extra-large-element-height color('input', 'background');
		}

		&:hover {
			outline: none;

			border-color: color('border', 'general', 1, 20);
		}

		&:focus {
			outline: none;

			border-color: color('link', 'general');
		}

		&:disabled {
			background-color: color('border', 'general', 1, -5);

			cursor: no-drop;

			color: color('text', 'general', .4);
		}

		&.error {
			border-color: color('red', 'state');
		}
	}

	input,
	textarea {
		@include placeholder {
			color: color('text', 'general', .4); 
		}
	}

	.label {
		@include user-select(none);
		
		display: block;

		& > span {
			color: color('text-secondary', 'general');
			font-size: $extra-small-font-size;
		}

		#{$all-text-inputs} {		
			font-size: $base-font-size;
			font-weight: normal;		
		}

		.text {
			@include user-select(none);
			
			display: block;

			margin-bottom: $small-spacing;

			color: color('text', 'general');
			font-size: $base-font-size;
			font-weight: normal;	
		}

		@include modifier('inline') {
			display: inline-block;
		}
	}

	.groups {
		@include element('item') {
			@extend .row;
			@extend .row--vertical-center;

			border-bottom: $base-border;

			&:last-child {
				border: none;
			}

			[class^="col__"], [class*="col__"] {
				margin: 0 !important;
			}

			label {
				margin: 0;
				
				font-size: $small-font-size;
				text-align: right
			}

		}

		// Spacing
		@each $size in $sizes {			
			@include modifier(pd-#{$size}) {
				.groups__item {
					margin: 0  (map-get($spacing-sizes, $size) * -1);
					padding: $small-spacing map-get($spacing-sizes, $size);		
				}
			}

			@include modifier(mg-#{$size}) {
				margin: (map-get($spacing-sizes, $size) * -1) 0;
			}
		}
	}
	
	textarea {
		padding: $small-spacing;

		min-height: $base-input-height * 4;

		line-height: $base-line-height;
	}
} // End if

.error-msg {
	position: relative;

	margin: $extra-small-spacing 0 0 0;
	padding: 0 0 0 $base-icon-height+$extra-small-spacing;

	color: color('red', 'state');
	line-height: 20px;

	.icon {
		position: absolute;
		top: 9px;
		left: 0;

		transform: translateY(-50%);

		color: color('red', 'state');
	}
}