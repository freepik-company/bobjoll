@if $notification-v1-1 {
    .notifications {
        @include position(fixed, 0 null null 0);
        
        width: 100vw;
        height: 100vh;
        
        pointer-events: none;

        z-index: 1000;

        %notification-position {
            @include position(absolute, null null null null);
        }        

        @include element('top-left') {
            @extend %notification-position;

            top: 0;
            left: 0;
        }

        @include element('top-right') {
            @extend %notification-position;

            top: 0;
            right: 20px;
        }

        @include element('top-center') {
            @extend %notification-position;

            @include transform(translateX(-50%));

            top: 0;
            left: 50%;
        }

         @include element('bottom-left') {
            @extend %notification-position;

            bottom: 0;
            left: 0;
        }

        @include element('bottom-right') {
            @extend %notification-position;

            bottom: 0;
            right: 20px;
        }

        @include element('bottom-center') {
            @extend %notification-position;

            @include transform(translateX(-50%));

            bottom: 0;
            left: 50%;
        }

        @include element('center') {
            @extend %notification-position;

            @include transform(translate(-50%, -50%));

            top: 50%;
            left: 50%;
        }
    }    

    .notification {
        position: relative;

        opacity: 0;

        width: 90vw;
        max-width: 360px;

        margin: $base-spacing;
        padding: $small-spacing $base-spacing;

        border-radius: $base-border-radius;

        background-color: color('notification', 'background');

        box-shadow: $base-box-shadow;

        pointer-events: all;

        @include element('message') {
            @include flex(1);

            padding: $small-spacing $base-spacing;
        }

        @include element('state') {
            @extend .col--stretch;

            overflow: hidden;        

            position: relative;

            width: $base-element-height;

            border-top-left-radius: $base-border-radius;
            border-bottom-left-radius: $base-border-radius;

            .icon {
                @include position(absolute, 50% null null 50%);
                @include transform(translate(-50%, -50%))
            }
        }

        @include element('close') {
            &:not(.nostyle) {
                @include position(absolute, 0 0 null null);
                @include transform(translate(50%, -50%));
            }
        }

        @include element('triangle') {
            @include position(absolute, null null null null);

            &::before {
                @include triangle($base-triangle-size, color('light', 'background'), down);

                display: block;

                content: '';
            }
        }

        @include modifier('static') {
            width: 100%;
            max-width: inherit;

            margin: 0 0 $base-spacing;
        }

        @include modifier('absolute') {
            @include position(absolute, null null null null);

            margin: 0;

            z-index: 99;
        }        

        @include modifier('alert') {
            padding: 0;

            .notification__content {
                @extend %row-flexbox;
                @extend .row--vertical-center;
            }

            .notification__close {
                margin: 0;
            }
        }

        @include modifier('error') {
            background-color: color('red', 'state');

            color: color('red', 'state-text');

            a {
                color: color('red', 'state-text', 0.75);
                font-weight: bold;

                &:hover {
                    color: color('red', 'state-text');
                }
            }

            .notification__state {
                background-color: color('red', 'state', 1, 5);

                .icon {
                    @extend .icon--cross;
                }
            }

            .notification__close {
                background-color: color('red', 'state', 1, 15);
            }

            .icon {
                color: color('red', 'state-text');
            }
        }

        @include modifier('warning') {
            background-color: color('yellow', 'state');

            color: color('yellow', 'state-text');

            a {
                color: color('yellow', 'state-text', 0.75);
                font-weight: bold;

                &:hover {
                    color: color('yellow', 'state-text');
                }
            }

            .notification__state {
                background-color: color('yellow', 'state', 1, 5);

                .icon {
                    @extend .icon--exclamation;
                }
            }

            .notification__close {
                background-color: color('yellow', 'state', 1, 15);
            }

            .icon {
                color: color('yellow', 'state-text');
            }
        }

        @include modifier('success') {
            background-color: color('green', 'state');

            color: color('green', 'state-text');

            a {
                color: color('green', 'state-text', 0.75);
                font-weight: bold;

                &:hover {
                    color: color('green', 'state-text');
                }
            }

            .notification__state {
                background-color: color('green', 'state', 1, 5);

                .icon {
                    @extend .icon--check;
                }
            }

            .notification__close {
                background-color: color('green', 'state', 1, 15);
            }

            .icon {
                color: color('green', 'state-text');
            }
        }

        @include modifier('neutral') {
            background-color: color('blue', 'state');

            color: color('blue', 'state-text');

            a {
                color: color('blue', 'state-text', 0.75);
                font-weight: bold;

                &:hover {
                    color: color('blue', 'state-text');
                }
            }

            .notification__state {
                background-color: color('blue', 'state', 1, 5);
            }

            .notification__close {
                background-color: color('blue', 'state', 1, 15);
            }

            .icon {
                color: color('blue', 'state-text');
            }
        }

        @include modifier('hide-disable') {
            .notification__disable {
                display: none;
            }
        }
    }
}