@import "settings";

@if $button-v4-0 {
  #{$all-buttons} {
    @include prefixer(appearance, none, webkit moz ms);
    margin: 0;
    padding: 0;
    border: none;
    background: none;
    user-select: none;
    cursor: pointer;
  }

  @include setComponent(#{$defaultPrefix}) {
    position: relative;
    display: inline-block;
    border: none;
    border-radius: $buttonBorderRadius;
    border-width: $buttonBorderWidth;
    border-style: $buttonBorderStyle;
    padding: $buttonPadding;
    text-align: center;
    font-weight: $defaultFontWeight;
    cursor: pointer;

    &::after {
      display: table;
      clear: both;
      content: '';
    }

    @each $name, $value in map-get($defaultSizeMap, "propertiesButton") {
      // Size
      #{$name}: #{$value};
    }

    @each $name, $map in $defaultColorMap {
      // Style
      @if ($name == "default") {
        @each $name, $value in $map {
          #{$name}: #{$value};
        }
      }

      @if ($name == "hover") {
        &:hover {
          transition: $defaultDuration $defaultTiming;

          @each $name, $value in $map {
            #{$name}: #{$value};
          }
        }
      }

      @if ($name == "active") {
        &.active {
          transition: $defaultDuration $defaultTiming;

          @each $name, $value in $map {
            #{$name}: #{$value};
          }
        }
      }
    }
  }

  @include setComponent(button--fullwidth) {
    @include prefixer(display, flex, ms spec);
    @include prefixer(align-items, center, ms spec);
    @include prefixer(justify-content, center, ms spec);
    width: 100%;
  }

  @if $icon-v2-0 {
    @include setComponent(button--icon) {
      padding: 0 !important;

      i {
        float: inherit !important;
        margin: 0 auto;
      }
    }

    @include setComponent(button--state) {
      &:not(.active) .state--inactive,
      &.active .state--active {
        display: block;
      }

      .state--active,
      .state--inactive {
        display: none;
      }
    }
  }

  .#{$defaultPrefix} {
    @include getComponent(#{$defaultPrefix});

    @if $icon-v2-0 {
      span ~ i,
      i ~ span {
        margin-left: $extra-small-spacing;
      }
  
      span {
        float: left;
      }
  
      i {
        float: left;
        color: inherit !important;
        fill: inherit !important;
  
        @extend %icon;
  
        @each $name, $value in map-get($defaultSizeMap, "propertiesIcon") {
          #{$name}: #{$value};
        }
  
        &::before {
          display: block;
        }
      }
    }
  }

  .#{$defaultPrefix}--fullwidth {
    @include getComponent(button--fullwidth);
  }

  .#{$defaultPrefix}--auto {
    height: auto !important;
    padding-top: $small-spacing;
    padding-bottom: $small-spacing;
    line-height: 1 !important;

    span {
      float: none !important;
    }
  }

  @if $icon-v2-0 {
    .#{$defaultPrefix}--state {
      @include getComponent(button--state);
    }
  
    .#{$defaultPrefix}--icon {
      @include getComponent(button--icon);
    }
  }

  /**
  * Sizes
  */
  @each $size, $map in $buttonSizes {
    $count: 1;

    @if ($size == map-get($buttonSettings, "defaultSize")) {
      $count: 2;
    }

    @for $i from 1 through $count {
      @include setComponent(#{$defaultPrefix}--#{$size}) {
        @each $name, $value in map-get($map, "propertiesButton") {
          #{$name}: #{$value};
        }

        @if $icon-v2-0 {
          i {
            @each $name, $value in map-get($map, "propertiesIcon") {
              #{$name}: #{$value};
            }
          }
        }
      }

      .#{$defaultPrefix}--#{$size} {
        @include getComponent(#{$defaultPrefix}--#{$size});
      }
    }
  }

  /**
  * Styles / Colors
  */
  @each $style, $map in $buttonStyles {
    @if ($style != map-get($buttonSettings, "defaultStyle")) {
      @include setComponent(#{$defaultPrefix}--#{$style}) {
        @each $styleProperty, $propertyKey in $map {
          @each $name, $map in $defaultColorMap {
            @if ($name == "default") {
              @each $name, $value in $map {
                @if ($propertyKey == $name) {
                  #{$styleProperty}: #{$value};
                }
              }
            }

            @if ($name == "hover") {
              &:hover,
              &:focus {
                @each $name, $value in $map {
                  @if ($propertyKey == $name) {
                    #{$styleProperty}: #{$value};
                  }
                }
              }
            }

            @if ($name == "active") {
              &.active {
                @each $name, $value in $map {
                  @if ($propertyKey == $name) {
                    #{$styleProperty}: #{$value};
                  }
                }
              }
            }
          }
        }
      }

      .#{$defaultPrefix}--#{$style} {
        @include getComponent(#{$defaultPrefix}--#{$style});
      }
    }

    @each $styleProperty, $propertyKey in $map {
      @each $colorName, $properties in $buttonColors {
        $prefix: #{$defaultPrefix};

        @if ($style != map-get($buttonSettings, "defaultStyle")) {
          $prefix: "#{$defaultPrefix}--#{$style}.#{$defaultPrefix}";
        }

        $ignoreStyles: map-get($properties, "ignoreStyles");
        $ignoreStyle: index($ignoreStyles, $style);

        @if (null == $ignoreStyle) {
          @include setComponent(#{$prefix}--#{$colorName}) {
            @each $name, $map in $properties {
              @if ($name == "default") {
                @each $name, $value in $map {
                  @if ($propertyKey == $name) {
                    #{$styleProperty}: #{$value};
                  }
                }
              }

              @if ($name == "hover") {
                &:hover,
                &:focus {
                  @each $name, $value in $map {
                    @if ($propertyKey == $name) {
                      #{$styleProperty}: #{$value};
                    }
                  }
                }
              }

              @if ($name == "active") {
                &.active {
                  @each $name, $value in $map {
                    @if ($propertyKey == $name) {
                      #{$styleProperty}: #{$value};
                    }
                  }
                }
              }
            }
          }

          .#{$prefix}--#{$colorName} {
            @include getComponent(#{$prefix}--#{$colorName});
          }
        }
      }
    }
  }
}