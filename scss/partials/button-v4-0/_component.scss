@import 'settings';

@if $button-v4-0 {
    $defaultSize: map-get($defaultSettings, 'defaultSize');
    $defaultStyle: map-get($defaultSettings, 'defaultStyle');
    $defaultColor: map-get($defaultSettings, 'defaultColor');
    $defaultStyles: map-get($buttonStyles, $defaultStyle);

    #{$all-buttons} {
        appearance: none;
        margin: 0;
        padding: 0;
        border: none;
        background: none;
        user-select: none;
        cursor: pointer;
    }

    .#{$defaultPrefix} {
        position: relative;
        display: inline-block;
        border: none;
        border-radius: $buttonBorderRadius;
        padding: $buttonPadding;
        text-align: center;
        font-weight: $defaultFontWeight;
        text-decoration: none;
        cursor: pointer;

        @each $name, $value in map-get($defaultSizeMap, 'propertiesButton') {
            #{$name}: #{$value};
        }

        @each $name, $map in $defaultColorMap {
            @if ($name == 'default') {
                transition: $defaultDuration $defaultTiming;
                @each $propertyRealName, $propertyKey in $defaultStyles {
                    @each $name, $value in $map {
                        @if ($name == $propertyRealName) {
                            #{$name}: #{$value};
                        }
                    }
                }
            }

            @if ($name == 'hover') {
                &:hover {
                    @each $name, $value in $map {
                        #{$name}: #{$value};
                    }
                }
            }

            @if ($name == 'active') {
                &.active {
                    @each $name, $value in $map {
                        #{$name}: #{$value};
                    }
                }
            }
        }

        &::after {
            display: table;
            clear: both;
            content: '';
        }

        &--auto {
            @extend %#{$defaultPrefix}--auto;
        }

        &--state {
            @extend %#{$defaultPrefix}--state;
        }

        &--icon {
            @extend %#{$defaultPrefix}--icon;
        }

        &--fullwidth {
            @extend %#{$defaultPrefix}--fullwidth;
        }

        &.disabled {
            opacity: 0.4;
            pointer-events: none;
        }

        @each $size, $map in $buttonSizes {
            &--#{$size} {
                @extend %#{$defaultPrefix}--#{$size};
            }
        }

        @each $style, $map in $buttonStyles {
            &--#{$style} {
                @extend %#{$defaultPrefix}--#{$style};
            }
        }

        span ~ i,
        i ~ span {
            margin-left: $small-spacing;
        }

        span {
            float: left;
        }

        i {
            float: left;
            color: inherit !important;
            fill: inherit !important;

            @if $icon-v2-0 {
                @extend %icon;
            }

            @each $name, $value in map-get($defaultSizeMap, 'propertiesIcon') {
                #{$name}: #{$value};
            }

            &::before {
                display: block;
            }
        }
    }

    %#{$defaultPrefix}--auto {
        height: auto !important;
        padding-top: $small-spacing;
        padding-bottom: $small-spacing;
        line-height: 1 !important;

        span {
            float: none !important;
        }
    }

    %#{$defaultPrefix}--state {
        &:not(.active) .state--inactive,
        &.active .state--active {
            display: block;
        }

        .state--active,
        .state--inactive {
            display: none;
        }
    }

    %#{$defaultPrefix}--icon {
        padding: 0 !important;

        i {
            float: inherit !important;
            margin: 0 auto;
        }
    }

    %#{$defaultPrefix}--fullwidth {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
    }

    %#{$defaultPrefix}--google {
        $defaultButtonSize: map-get($buttonSizes, 'md');
        $defaultIconProperties: map-get($defaultButtonSize, 'propertiesIcon');
        $defaultFontSize: map-get($defaultIconProperties, 'font-size');

        i {
            display: inline-block;
            width: $defaultFontSize;
            height: 100%;
            background: url('~bobjoll/images/icons/google.svg') no-repeat center center;
            background-size: contain;

            &::before {
                display: none;
            }
        }

        @each $size, $map in $buttonSizes {
            &.#{defaultPrefix}--#{$size} {
                $properties: map-get($map, 'propertiesIcon');
                $font-size: map-get($properties, 'font-size');

                i {
                    width: $font-size;
                }
            }
        }
    }

    @each $size, $map in $buttonSizes {
        %#{$defaultPrefix}--#{$size} {
            @each $propertyName, $propertyValue in map-get($map, 'propertiesButton') {
                #{$propertyName}: #{$propertyValue};
            }

            i {
                @each $propertyName, $propertyValue in map-get($map, 'propertiesIcon') {
                    #{$propertyName}: #{$propertyValue};
                }
            }
        }
    }

    @each $buttonStyle, $buttonProperties in $buttonStyles {
        %#{$defaultPrefix}--#{$buttonStyle} {
            @each $propertyRealName, $propertyKey in $buttonProperties {
                // default styles
                @each $colorName, $colorMap in $defaultColorMap {
                    @if ('default' == $colorName) {
                        @each $propertyName, $propertyValue in $colorMap {
                            @if ($propertyKey==$propertyName) {
                                #{$propertyRealName}: #{$propertyValue};
                            }
                        }
                    }
                    @if ('hover' == $colorName) {
                        &:hover,
                        &:focus {
                            @each $propertyName, $propertyValue in $colorMap {
                                @if ($propertyKey==$propertyName) {
                                    #{$propertyRealName}: #{$propertyValue};
                                }
                            }
                        }
                    }
                    @if ('active' == $colorName) {
                        &.active {
                            @each $propertyName, $propertyValue in $colorMap {
                                @if ($propertyKey==$propertyName) {
                                    #{$propertyRealName}: #{$propertyValue};
                                }
                            }
                        }
                    }
                }
            }
        }
    }

    @each $buttonStyle, $buttonProperties in $buttonStyles {
        $prefix: #{$defaultPrefix};
        @each $colorName, $colorProperties in $buttonColors {
            $ignoreStyles: map-get($colorProperties, 'ignoreStyles');
            $ignoreStyle: index($ignoreStyles, $buttonStyle);
            @if (null == $ignoreStyle) {
                %#{$defaultPrefix}--#{"" + $colorName} {
                    @each $propertyRealName, $propertyKey in $buttonProperties {
                        @each $colorState, $colorStateMap in $colorProperties {
                            @if ($colorState == 'default') {
                                @each $propertyName, $propertyValue in $colorStateMap {
                                    @if ($propertyKey == $propertyName) {
                                        #{$propertyRealName}: #{$propertyValue};
                                    }
                                }
                            }
                            @if ($colorState == 'hover') {
                                &:hover,
                                &:focus {
                                    @each $propertyName, $propertyValue in $colorStateMap {
                                        @if ($propertyKey == $propertyName) {
                                            #{$propertyRealName}: #{$propertyValue};
                                        }
                                    }
                                }
                            }

                            @if ($colorState == 'active') {
                                &.active {
                                    @each $propertyName, $propertyValue in $colorStateMap {
                                        @if ($propertyKey == $propertyName) {
                                            #{$propertyRealName}: #{$propertyValue};
                                        }
                                    }
                                }
                            }

                            @if ($colorState == 'propertiesIcon') {
                                i {
                                    @each $propertyName, $propertyValue in $colorStateMap {
                                        #{$propertyName}: #{$propertyValue};
                                    }
                                }
                            }
                        }
                    }
                }
                @if ($buttonStyle != map-get($buttonSettings, 'defaultStyle')) {
                    .#{$defaultPrefix}--#{$buttonStyle}.#{$defaultPrefix}--#{"" + $colorName} {
                        @extend %#{$defaultPrefix}--#{$buttonStyle};
                        @extend %#{$defaultPrefix}--#{"" + $colorName};
                    }
                } @else {
                    .#{$prefix}--#{"" + $colorName} {
                        @extend %#{$prefix}--#{"" + $colorName};
                    }
                }
            }
        }
    }
}
