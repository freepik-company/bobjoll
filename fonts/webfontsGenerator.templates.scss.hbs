@if $icon-v2-0 {
    $webfont: "{{fontName}}" !global;

	@font-face {
		font-family: $webfont;
		src: {{{src}}};
	}

    %{{baseSelectorPlain}} {
		display: block;

        text-transform: none;

        -webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;

		speak: none;
		
		&::before {
			font-family: $webfont;
			font-style: normal;
			font-weight: normal;
			font-variant: normal;
		}
    }

    {{baseSelector}} {
        @extend %{{baseSelectorPlain}};

        width: $base-icon-width;
        height: $base-icon-height;

        font-size: $base-icon-width;
        line-height: $base-icon-height;

        color: color('icon', 'general');
        fill: color('icon', 'general');
    }

    {{classPrefix}}inverted {
        color: color('icon-inverted', 'general') !important;
        fill: color('icon-inverted', 'general') !important;
    }

    $map: map-get($colors, 'social');

    @each $color, $hex in $map {
        {{classPrefix}}#{$color} {
            color: $hex;
            fill: $hex;
        }
    }

    @each $size1 in $sizes {
        $map: map-get($icon-sizes, $size1);

            {{classPrefix}}#{$size1} {
            width: map-get($map, 'width');
            height: map-get($map, 'height');

            font-size: map-get($map, 'width');
            line-height: map-get($map, 'height');

            @each $size2 in $sizes {
                $icon-spacing: ((map-get($base-sizes, $size2) - map-get($map, 'height')) / 2);

                &{{classPrefix}}mg-#{$size2} { padding: $icon-spacing; box-sizing: content-box; }
            } // End spacing
        }       
    }
    
    {{#each codepoints}}
    {{@root.classPrefix}}{{@key}} { &::before { content: "\\{{this}}"; } }
    {{/each}}
}