@if $icon-v2-0 {
	@font-face {
		font-family: "{{fontName}}";
		src: {{{src}}};
	}

	.icon {
		display: block;

        width: $base-icon-width;
        height: $base-icon-height;

        font-size: $base-icon-width;
        line-height: $base-icon-height;

        color: color('icon', 'general');
        fill: color('icon', 'general');
        
        text-transform: none;

        -webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;

		speak: none;
		
		&::before {
			font-family: "{{fontName}}";
			font-style: normal;
			font-weight: normal;
			font-variant: normal;
		}

        @include modifier('inverted') {
            color: color('icon-inverted', 'general');
            fill: color('icon-inverted', 'general');
        } // End Inverted

        $map: map-get($colors, 'social');

        @each $color, $hex in $map {
            @include modifier($color) {
                color: $hex;
                fill: $hex;
            }
        } // End Social 

        @each $size1 in $sizes {
            $map: map-get($icon-sizes, $size1);

            @include modifier($size1) {
                width: map-get($map, 'width');
                height: map-get($map, 'height');

                font-size: map-get($map, 'width');
                line-height: map-get($map, 'height');

                @each $size2 in $sizes {
                    $icon-spacing: ((map-get($base-sizes, $size2) - map-get($map, 'height')) / 2);

                    &.icon--mg-#{$size2} { padding: $icon-spacing; box-sizing: content-box; }
                } // End spacing
            }       
		} // End sizes
		
		{{#each codepoints}}
			@include modifier("{{@key}}") {
				&::before {
					content: "\\{{this}}";
				}
			}
		{{/each}}
	}
}